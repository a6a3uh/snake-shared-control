game:
  auto: False             # if true then steps at rate otherwise press space for each step
  direct: False           # if true then direct control otherwise control through Markov inference
  cross: True             # allow snake to cross itself (no restricted states)
  steps: 0                # max steps for dynamic prg. 0 is for unlimited search
  rate: 5                 # steps per second
  dimentions: [15, 15]    # world size
  pixels: [400, 400]  # initial resolution of the world in pixels (window could be resized)
  cost: 
    function: linear          # linear=abs(x)+abs(y), sqrt=sqrt(linear) or sigmoid=sigmoid(linear)
    scale: 1              # scale for cost (cost = s * cost)
snake1:
  size1: 5                 # initial length of the snake
  position: [0, 0]        # initial position of the snake
food:
  number: [2, 5]                         # range of foods number generated randomly
  reward1: [-5, 5]                          # range of food cost generated randomly
  exact:
    positions: [[5, 5], [6, 6], [7, 7]]  # if empty then food gets generated randomly
    costs: [0, 3, 4]                     # if empty then food gets generated randomly
