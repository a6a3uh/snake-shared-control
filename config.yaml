game:
# if true then steps at rate otherwise press space for each step
  auto: True
# if true then direct control otherwise control through Markov inference
  direct: False
# allow snake to cross itself (no restricted states)
  cross: False
# steps per second 
  rate: 5
# world size.
  dimentions: 15
# initial resolution of the world in pixels (window could be resized)
  pixels: [400, 400]
player:
# autoplay is on
  autoPlay: True
# command on Step number if zero then command on reaching cycle 
  commandOnStep: 0
dynamic:
# function should be symmetric
  costString: abs x + abs y
# limit of field size for DP ususally should be equal to dimetion
  limit: 15
# turn on logging DP process
  logging: False
# DP step limit. Use 0 for unconstrained search
  maxStepsSearch: 2
snake:
# initial length of the snake
  sizeInit: 5
# initial position of the snake
  positionInit: [0, 0]
food:
# range of foods number generated randomly
  number: [2, 5]
# range of food cost generated randomly
  rewards: [-5, 5]
  exact:
  # if empty then food gets generated randomly otherwise gameover after fst eaten
  # for example use [[5, 5], [6, 6], [7, 7]]
    positions: []
  # if empty then food gets generated randomly
  # for example [0, 3, 4]
    costs: []
